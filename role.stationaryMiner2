var roleMiner = {
  //** @param [Creep] creep **/
  run: function(creep) {
    if (creep.memory.repairCount == null){
      creep.memory.repairCount = 0;
    }

    if (creep.memory.repairCount == 50){
      var storage = creep.pos.findClosestByPath(FIND_STRUCTURES, {
          filter: (structure) => {
              return structure.structureType == STRUCTURE_CONTAINER
          }
      });
      creep.repair(storage);
      creep.memory.repairCount = 0;
    }
    if (creep.memory.container == null){
      var sources = creep.room.find(FIND_SOURCES);
      var container;
      for (let s of sources){
        //Find the nearby container
        var cont = s.pos.findClosestByRange(FIND_STRUCTURES, {
          filter: (structure) => {
            return structure.structureType == STRUCTURE_CONTAINER
          }
        });
        var position = cont.pos
        // Need to find what's here
        if (position.lookFor(LOOK_CREEPS) == ''){
          creep.memory.container = position;
        }
      }
    }

    // Move to and mine empty spot
    if (creep.pos.x == creep.memory.container.x && creep.pos.y == creep.memory.container.y){
      creep.harvest(creep.pos.findClosestByRange(FIND_SOURCES));
    } else {
      // need to make sure it didn't get filled already
      creep.moveTo(creep.memory.container.x, creep.memory.container.y);
      creep.memory.repairCount += 1;
    }
  }
}

module.exports = roleMiner;
